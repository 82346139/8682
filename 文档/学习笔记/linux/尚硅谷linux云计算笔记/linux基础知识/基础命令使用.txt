登录终端：
	本地字符端		 tty1-6		alt+F1-6
	本地图形端		 tty7		ctrl+alt+F7 (按住3秒，需要安装启动图形界面)
	远程终端		 pst/0-255
-------------------------------------------------------------------------------------------------
系统痕迹命令
系统中有一些重要的痕迹日志文件，如 /var/log/wtmp 、 /var/run/utmp 、 /var/log/btmp 、
/var/log/lastlog 等日志文件，如果你用 vim 打开这些文件，你会发现这些文件是二进制乱码。这是由
于这些日志中保存的是系统的重要登录痕迹，包括某个用户何时登录了系统，何时退出了系统，错误
登录等重要的系统信息。这些信息要是可以通过 vim 打开，就能编辑，这样痕迹信息就不准确，所以
这些重要的痕迹日志，只能通过对应的命令来进行查看。
1．w 命令
w 命令是显示系统中正在登陆的用户信息的命令，这个命令查看的痕迹日志是/var/run/utmp。这
个命令的基本信息如下：
 命令名称：w
 英文原意：Show who is logged on and what they are doing.
 所在路径：/usr/bin/w
 执行权限：所有用户。
 功能描述：显示灯用户，和他正在做什么。
例如：
[root@localhost ~]# w
00:06:11 up 5:47, 2 users, load average: 0.00, 0.01, 0.05
#系统时间 持续开机时间 登陆用户 系统在 1 分钟，5 分钟，15 分钟前的平均负载
USER TTY FROM LOGIN@ IDLE JCPU PCPU WHAT
root tty1 23:59 7:07 0.08s 0.08s -bash
root pts/2 192.168.252.1 23:42 3.00s 0.44s 0.06s w

第一行信息，内容如下：
---------------------------------------------------------------------------------
|内 容 说 明																	|
|12:26:46 系统当前时间															|
|up 1 day, 13:32 系统的运行时间，本机已经运行 1 天 13 小时 32 分钟				|
|2 users 当前登录了两个用户														|
|load average: 0.00, 0.00, 0.00													|
|系统在之前 1 分钟、5 分钟、15 分钟的平均负载。如果 CPU 是单核的，则这个数值	|
|超过 1 就是高负载；如果 CPU 是四核的，则这个数值超过 4 就是高负载				|
|（这个平均负载完全是依据个人经验来进行判断的，一般认为不应该超过服务器 CPU		|
|的核数）																		|
---------------------------------------------------------------------------------
|第二行信息，内容如下：															|
|内 容 说 明																	|
|USER 当前登陆的用户															|
|TTY 登陆的终端：																|
|tty1-6：本地字符终端（alt+F1-6 切换）											|
|tty7：本地图形终端（ctrl+alt+F7 切换，必须安装启动图形界面）					|
|pts/0-255:远程终端																|
|FROM 登陆的 IP 地址，如果是本地终端，则是空									|
|LOGIN@ 登陆时间																|
IDLE 用户闲置时间																|
|JCPU 所有的进程占用的 CPU 时间													|
|PCPU 当前进程占用的 CPU 时间													|
|WHAT 用户正在进行的操作														|
---------------------------------------------------------------------------------
2．who 命令
who 命令和 w 命令类似，用于查看正在登陆的用户，但是显示的内容更加简单，也是查看
/var/run/utmp 日志。
[root@localhost ~]# who
root tty1 2018-11-12 23:59
root pts/2 2018-11-12 23:42 (192.168.252.1)
#用户名 登陆终端 登陆时间（来源 IP）

-------------------------------------------
3．last 命令
last 命令是查看系统所有登陆过的用户信息的，包括正在登陆的用户和之前登陆的用户。这个命
令查看的是/var/log/wtmp 痕迹日志文件。
[root@localhost ~]# last
root tty1 Mon Nov 12 23:59 still logged in
root pts/2 192.168.252.1 Mon Nov 12 23:42 still logged in
root pts/1 192.168.252.1 Mon Nov 12 23:37 - 23:59 (00:22)
root tty1 Mon Nov 12 19:17 - 23:58 (04:41)
root pts/0 192.168.252.1 Mon Nov 12 18:20 - 23:52 (05:32)
reboot system boot 3.10.0-862.el7.x Mon Nov 12 18:18 - 00:22 (06:03)
#系统重启信息记录
root pts/1 192.168.252.1 Mon Nov 12 08:48 - down (01:29)
root pts/1 192.168.252.1 Thu Nov 8 21:04 - 22:29 (01:25)
#用户名 终端号 来源 IP 地址 登陆时间 - 退出时间

---------------------------------------
4．lastlog 命令
lastlog 命令是查看系统中所有用户最后一次的登陆时间的命令，他查看的日志是/var/log/lastlog
文件。
[root@localhost ~]# lastlog
Username Port From Latest
root tty1 Mon Nov 12 23:59:03 +0800 2018
bin **Never logged in**
daemon **Never logged in**
adm **Never logged in**
lp **Never logged in**
sync **Never logged in**
…省略部分内容…
#用户名 终端 来源 IP 登陆时间

5．lastb 命令
lastb 命令是查看错误登陆的信息的，查看的是/var/log/btmp 痕迹日志：
[root@localhost ~]# lastb
(unknown tty1 Mon Nov 12 23:58 - 23:58 (00:00)
root tty1 Mon Nov 12 23:58 - 23:58 (00:00)
#错误登陆用户 终端 尝试登陆的时间

-------------------------------------------------------------------------------------------------
write 命令
write 命令的基本信息如下。
 命令名称：write。
 英文原意：send a message to another user。
 所在路径：/usr/bin/write。
 执行权限：所有用户。
 功能描述：向其他用户发送信息。
[root@localhost ~]#write user1 pts/1
hello
I will be in 5 minutes to restart, please save your data
#向在 pts/1（远程终端 1）登录的 user1 用户发送信息，使用“Ctrl+D”快捷键保存发送的数据

-------------------------------

wall 命令
write 命令用于给指定用户发送信息，而 wall 命令用于给所有登录用户发送信息，包括你自己。
执行时，在 wall 命令后加入需要发送的信息即可，例如：
[root@localhost ~]# wall "I will be in 5 minutes to restart, please save your data"

-------------------------------
mail 命令
mail 是 Linux 的邮件客户端命令，可以利用这个命令给其他用户发送邮件。mail 命令的基本信息
如下。
 命令名称：mail。
   英文原意：send and receive Internet mail。
 所在路径：/bin/mail。
 执行权限：所有用户。
 功能描述：发送和接收电子邮件。
例子 1：发送邮件
如果我们想要给其他用户发送邮件，则可以执行如下命令：
[root@localhost ~]# mail user1
Subject: hello <- 邮件标题
Nice to meet you! <- 邮件具体内容
. 				  <- 使用“.”来结束邮件输入
#发送邮件给 user1 用户

我们接收到的邮件都保存在“/var/spool/mail/用户名”中，每个用户都有一个以自己的用户名命名
的邮箱。
-----------------------------------------------------------------------------------------
|如果我们想把某个文件的内容发送给指定用户，则可以执行如下命令：							|
|[root@localhost ~]# mail -s "test mail" root < /root/anaconda-ks.cfg					|
|选项：																					|
|-s： 指定邮件标题																		|
|#把/root/anaconda-ks.cfg 文件的内容发送给 root 用户									|
|我们在写脚本时，有时需要脚本自动发送一些信息给指定用户，把要发送的信息预先写到文件中，	|
|是一个非常不错的选择。																	|
-----------------------------------------------------------------------------------------
--------------
查看已经接收的邮件
我们可以直接在命令行中执行 mail 命令，进入 mail 的交互命令中，可以在这里查看已经接收到
的邮件。例如：
[root@localhost ~]# mail
Heirloom Mail version 12.4 7/29/08.Type ?for help.
"/var/spool/mail/root": 1 message 1 new
>N 1 root Mon Dec 5 22:45 68/1777 "test mail"<-之前收到的邮件
>N 2 root Mon Dec 5 23:08 18/602 "hello"
#未阅读 编号 发件人 时间 标题
& 											 <-等待用户输入命令

可以看到已经接收到的邮件列表，“N”代表未读邮件，如果是已经阅读过的邮件，则前面是不
会有这个“N”的；之后的数字是邮件的编号，我们主要通过这个编号来进行邮件的操作。如果我们
想要查看第一封邮件，则只需输入邮件的编号“1”就可以了。

这些交互命令是可以简化输入的，比如“headers”命令，就可以直接输入“h”，这是列出邮件
标题列表的命令。我们解释一下常用的交互命令。
 headers：列出邮件标题列表，直接输入“h”命令即可。
 delete：删除指定邮件。比如想要删除第二封邮件，可以输入“d 2”。
 save：保存邮件。可以把指定邮件保存成文件，如“s 2 /tmp/test.mail”。
 quit：退出，并把已经操作过的邮件进行保存。比如移除已删除邮件、保存已阅读邮件等。
 exit：退出，但是不保存任何操作。

-------------------------------------------------------------------------------------------------

sync 数据同步
sync 命令的基本信息如下。
 命令名称：sync。
 英文原意：flush file system buffers。
 所在路径：/bin/sync。
 执行权限：所有用户。
 功能描述：刷新文件系统缓冲区。
2．shutdown 命令
shutdown 命令的基本信息如下。
 命令名称：shutdown。
 英文原意：bring the system down。
 所在路径：/sbin/shutdown。
 执行权限：超级用户。
 功能描述：关机和重启
命令的基本格式如下：
[root@localhost ~]# shutdown [选项] 时间 [警告信息]
选项：
-c： 取消已经执行的 shutdown 命令
-h： 关机
-r： 重启
-------------------------------------------------------------------------------------------------
．ping 命令
ping 是常用的网络命令，主要通过 ICMP 协议进行网络探测，测试网络中主机的通信情况。ping
命令的基本信息如下。
 命令名称：ping。
 英文原意：send ICMP ECHO_REQUEST to network hosts。
 所在路径：/bin/ping。
 执行权限：所有用户。
 功能描述：向网络主机发送 ICMP 请求。
命令的基本格式如下：
[root@localhost ~]# ping [选项] IP
选项：
-b： 后面加入广播地址，用于对整个网段进行探测
-c 次数： 用于指定 ping 的次数
-s 字节： 指定探测包的大小
例子：探测网段中的可用主机
在 ping 命令中，可以使用“-b”选项，后面加入广播地址，探测整个网段。我们可以使用这个选
项知道整个网络中有多少主机是可以和我们通信的，而不用一个一个 IP 地址地进行探测。
-------------------------------------------------------------------------------------------------

type
显示指定命令的类型
补充说明
type命令 用来显示指定命令的类型，判断给出的指令是内部指令还是外部指令。

命令类型：

alias：别名。
keyword：关键字，Shell保留字。
function：函数，Shell函数。
builtin：内建命令，Shell内建命令。
file：文件，磁盘文件，外部命令。
unfound：没有找到。
语法
type(选项)(参数)
选项
-t：输出“file”、“alias”或者“builtin”，分别表示给定的指令为“外部指令”、“命令别名”或者“内部指令”；
-p：如果给出的指令为外部指令，则显示其绝对路径；
-a：在环境变量“PATH”指定的路径中，显示给定指令的信息，包括命令别名。
--------------------------------
命令的别名：补充命令
命令的别名，就是命令的小名，主要是用于照顾管理员使用习惯的。
命令格式：
[root@localhost ~]# alias
#查询命令别名
[root@localhost ~]# alias 别名='原命令'
#设定命令别名
例如：
[root@localhost ~]# alias ser='service network restart'
#用 ser 别名，替代 service network restart 命令
用命令定义的别名，是临时生效的，要想永久生效，需要写入环境变量配置文件~/.bashrc

常用快捷键：补充命令
快捷键 作 用
Tab 键 命令或文件补全
ctrl+A 把光标移动到命令行开头。如果我们输入的命令过长，想要把光标移
动到命令行开头时使用。
ctrl+E 把光标移动到命令行结尾。
ctrl+C 强制终止当前的命令。
ctrl+L 清屏，相当于 clear 命令。
ctrl+U 删除或剪切光标之前的命令。我输入了一行很长的命令，不用使用退
格键一个一个字符的删除，使用这个快捷键会更加方便
ctrl+Y 粘贴 ctrl+U 剪切的内容。

-------------------------------------------------------------------------------------------------

netstat 命令（CentOS 7 中，需要安装 net-snmp.x86_64，net-tools.x86_64 两个包才有此命令。7.5
系统中已经自动安装）格式如下：
[root@localhost ~]# netstat [选项]
选项：
-a： 列出所有网络状态，包括 Socket 程序
-c 秒数： 指定每隔几秒刷新一次网络状态
-n： 使用 IP 地址和端口号显示，不使用域名与服务名
-p： 显示 PID 和程序名
-t： 显示使用 TCP 协议端口的连接状况
-u： 显示使用 UDP 协议端口的连接状况
-l： 仅显示监听状态的连接
-r： 显示路由表
[root@localhost ~]# netstat -an | grep "ESTABLISHED" | wc -l
#如果想知道具体的网络连接数量，就可以再使用 wc 命令统计行数
统计正在连接的网络连接数量

查看本机开启的端口
这是本机最常用的方式，使用选项“-tuln”。因为使用了“-l”选项，所以只能看到监听状态的
连接，而不能看到已经建立连接状态的连接。例如：
[root@localhost ~]# netstat -tuln （查看本机开起来多少端口）
--------------------------------------------------------------------------------
|Active Internet connections (only servers)                                    |
|Proto |Recv-Q | Send-Q  |	Local Address  |   Foreign Address |	State      |
|tcp   | 0 	   | 0 		 |	0.0.0.0:3306   |	  0.0.0.0:*    |	LISTEN     |
|tcp   | 0	   | 0 		 |	0.0.0.0:11211  |	  0.0.0.0:*    |	LISTEN     | 
|tcp   | 0	   | 0 		 |  0.0.0.0:22 	   |	  0.0.0.0:*    |	LISTEN     |
|tcp   | 0 	   | 0 		 |  :::11211 	   |	  :::* 		   |	LISTEN     |
|tcp   | 0 	   | 0 		 |  :::80 		   |	  :::* 		   |	LISTEN     |
|tcp   | 0 	   | 0 		 |  :::22 		   |	  :::* 		   |	LISTEN     |
|udp   | 0 	   | 0 		 |  0.0.0.0:11211  |	  0.0.0.0:*    |               |
|udp   | 0 	   | 0 		 |  :::11211 	   |	  :::*         |               |
--------------------------------------------------------------------------------
#协议 接收队列 发送队列 本机的 IP 地址及端口号 远程主机的 IP 地址及端口号 状态

这个命令的输出较多。
 Proto：网络连接的协议，一般就是 TCP 协议或者 UDP 协议。
 Recv-Q：表示接收到的数据，已经在本地的缓冲中，但是还没有被进程取走。
 Send-Q：表示从本机发送，对方还没有收到的数据，依然在本地的缓冲中，一般是不具备 ACK
标志的数据包。
 Local Address：本机的 IP 地址和端口号。
 Foreign Address：远程主机的 IP 地址和端口号。
 State：状态。常见的状态主要有以下几种。
- LISTEN：监听状态，只有 TCP 协议需要监听，而 UDP 协议不需要监听。
- ESTABLISHED：已经建立连接的状态。如果使用“-l”选项，则看不到已经建立连接的状态。
- SYN_SENT：SYN 发起包，就是主动发起连接的数据包。
- SYN_RECV：接收到主动连接的数据包。
- FIN_WAIT1：正在中断的连接。
- FIN_WAIT2：已经中断的连接，但是正在等待对方主机进行确认。
- TIME_WAIT：连接已经中断，但是套接字依然在网络中等待结束。
- CLOSED：套接字没有被使用。
在这些状态中，我们最常用的就是 LISTEN 和 ESTABLISHED 状态，一种代表正在监听，另一种
代表已经建立连接。

[root@localhost ~]# netstat -anpt | grep ESTABLISHED | wc -l （统计正在连接的数量）


-------------------------------------------------------------------------------------------------
stat 命令
stat 是查看文件详细信息的命令，而且可以看到文件的这三个时间，其基本信息如下。
 命令名称：stat。
 英文原意：display file or file system status。
 所在路径：/usr/bin/stat。
 执行权限：所有用户。
功能描述：显示文件或文件系统的详细信息。
[root@localhost ~]# stat anaconda-ks.cfg
 文件："anaconda-ks.cfg"
 大小：1453 块：8 IO 块：4096 普通文件
设备：803h/2051dInode：33574991 硬链接：1
权限：(0600/-rw-------) Uid：( 0/ root) Gid：( 0/ root)
环境：system_u:object_r:admin_home_t:s0
最近访问：2018-11-06 23:22:23.409038121 +0800
最近更改：2018-10-24 00:53:08.760018638 +0800 #数据修改时间
最近改动：2018-10-24 00:53:08.760018638 +0800 #状态修改时间
创建时间：-


-------------------------------------------------------------------------------------------------
                                  搜索命令
locate 命令
基本用法
locate 命令才是可以按照文件名搜索普通文件的命令。
 优点：按照数据库搜索，搜索速度快，消耗资源小。数据库位置/var/lib/mlocate/mlocate.db，
可以使用 updatedb 命令强制更新数据库。
 缺点：只能按照文件名来搜索文件，而不能执行更复杂的搜索，比如按照权限、大小、修改
时间等搜索文件。
locate 命令的基本信息如下。
 命令名称：locate。
 英文原意：find files by name。
 所在路径：/usr/bin/locate。
 执行权限：所有用户。
 功能描述：按照文件名搜索文件。
更新他的数据库
[root@localhost ~]# updatedb
-------------------------------------
find 命令
find 命令的基本信息如下。
 命令名称：find。
 英文原意：search for files in a directory hierarchy。
 所在路径：/bin/find。
 执行权限：所有用户。
 功能描述：在目录中搜索文件。
按照文件名搜索
[root@localhost ~]# find 搜索路径 [选项] 搜索内容
选项：
-name： 按照文件名搜索
-iname： 按照文件名搜索，不区分文件名大小写
-inum： 按照 inode 号搜索

按照文件大小搜索
[root@localhost ~]# find 搜索路径 [选项] 搜索内容
选项：
-size [+|-]大小： 按照指定大小搜索文件
这里的“+”的意思是搜索比指定大小还要大的文件，“-”的意思是搜索比指定大小还要小的文
件。

find 命令的单位：
[root@localhost ~]# man find
 -size n[cwbkMG]
 File uses n units of space. The following suffixes can be used:
 'b' for 512-byte blocks (this is the default if no suffix is used)
#这是默认单位，如果单位为 b 或不写单位，则按照 512 Byte 搜索
 'c' for bytes
#搜索单位是 c，按照字节搜索
 'w' for two-byte words
#搜索单位是 w，按照双字节（中文）搜索
 'k' for Kilobytes (units of 1024 bytes)
#按照 KB 单位搜索，必须是小写的 k
 'M' for Megabytes (units of 1048576 bytes)
#按照 MB 单位搜索，必须是大写的 M
 'G' for Gigabytes (units of 1073741824 bytes)
#按照 GB 单位搜索，必须是大写的 G

按照修改时间搜索
Linux 中的文件有访问时间（atime）、数据修改时间（mtime）、状态修改时间（ctime）
这三个时间的区别我们在 stat 命令中已经解释过了，这里用 mtime 数据修改时间来举例，重点说
说“[+-]”时间的含义。
 -5：代表 5 天内修改的文件。
 5：代表前 5～6 天那一天修改的文件。
 +5：代表 6 天前修改的文件。

按照权限搜索
命令格式。
[root@localhost ~]# find 搜索路径 [选项] 搜索内容
选项：
-perm 权限模式： 查找文件权限刚好等于“权限模式”的文件
-perm -权限模式：查找文件权限全部包含“权限模式”的文件  （比她小）
-perm +权限模式：查找文件权限包含“权限模式”的任意一个权限的文件 （比她小）

按照所有者和所属组搜索
[root@localhost ~]# find 搜索路径 [选项] 搜索内容
选项：
-uid 用户 ID： 按照用户 ID 查找所有者是指定 ID 的文件
-gid 组 ID： 按照用户组 ID 查找所属组是指定 ID 的文件
-user 用户名： 按照用户名查找所有者是指定用户的文件
-group 组名： 按照组名查找所属组是指定用户组的文件
-nouser： 查找没有所有者的文件
按照所有者和所属组搜索时，“-nouser”选项比较常用，主要用于查找垃圾文件。
只有一种情况例外，那就是外来文件。比如光盘和 U 盘中的文件如果是由 Windows 复制的，在
Linux 中查看就是没有所有者的文件；再比如手工源码包安装的文件，也有可能没有所有者

按照文件类型搜索
[root@localhost ~]# find 搜索路径 [选项] 搜索内容
选项：
-type d： 查找目录
-type f： 查找普通文件
-type l： 查找软链接文件

逻辑运算符
[root@localhost ~]# find 搜索路径 [选项] 搜索内容
选项：
-a： and 逻辑与
-o： or 逻辑或
-not： not 逻辑非
1）-a：and 逻辑与
find 命令也支持逻辑运算符选项，其中-a 代表逻辑与运算，也就是-a 的两个条件都成立，find 搜
索的结果才成立。举个例子：
[root@localhost ~]# find . -size +2k -a -type f
#在当前目录下搜索大于 2KB，并且文件类型是普通文件的文件
2）-o：or 逻辑或
-o 选项代表逻辑或运算，也就是-o 的两个条件只要其中一个成立，find 命令就可以找到结果。例
如：
[root@localhost ~]# find . -name cangls -o -name bols
./cangls
./bols
#在当前目录下搜索文件名要么是 cangls 的文件，要么是 bols 的文件
3）-not：not 逻辑非
-not 是逻辑非，也就是取反的意思。举个例子：
[root@localhost ~]# find . -not -name cangls
#在当前目录下搜索文件名不是 cangls 的文件

其他选项
1）-exec 选项
这里我们主要讲解两个选项“-exec”和“-ok”，这两个选项的基本作用非常相似。我们先来看
看“-exec”选项的格式。
[root@localhost ~]# find 搜索路径 [选项] 搜索内容 -exec 命令 2 {} \;
[root@localhost ~]# find . -size +1k -a -type f -exec ls -lh {} \; | wc -l
 
其次，这个选项的作用其实是把 find 命令的结果交给由“-exec”调用的命令 2 来处理。“{}”就
代表 find 命令的查找结果。
2）-ok 选项
“-ok”选项和“-exec”选项的作用基本一致，区别在于：“-exec”的命令 2 会直接处理，而不询
问；“-ok”的命令 2 在处理前会先询问用户是否这样处理，在得到确认命令后，才会执行。

-------------------------------------------------------------------------------------------------
grep 命令：补充命令
grep 的作用是在文件中提取和匹配符合条件的字符串行。命令格式如下：
[root@localhost ~]# grep [选项] "搜索内容" 文件名
选项：
-i： 忽略大小写
 -n： 输出行号
-v： 反向查找
--color=auto: 搜索出的关键字用颜色显示
find 也是搜索命令，那么 find 命令和 grep 命令有什么区别呢？
1）find 命令
find 命令用于在系统中搜索符合条件的文件名，如果需要模糊查询，则使用通配符进行匹配，通配符
是完全匹配（find 命令可以通过-regex 选项，把匹配规则转为正则表达式规则，但是不建议如此）。
2）grep 命令
grep 命令用于在文件中搜索符合条件的字符串，如果需要模糊查询，则使用正则表达式进行匹配，
正则表达式是包含匹配。
3）通配符与正则表达式的区别
通配符：用于匹配文件名，完全匹配
--------------------------------
通 配 符 作 用
? 匹配一个任意字符
* 匹配 0 个或任意多个任意字符，也就是可以匹配任何内容
[] 匹配中括号中任意一个字符。例如，[abc]代表一定匹配一个字符，或者是 a，或者是 b，或者是 c
[-] 匹配中括号中任意一个字符，-代表一个范围。例如，[a-z]代表匹配一个小写字母
[^] 逻辑非，表示匹配不是中括号内的一个字符。例如，[^0-9]代表匹配一个不是数字的字符
正则表达式：用于匹配字符串，包含匹配
--------------------------------
正 则 符 作 用
? 匹配前一个字符重复 0 次，或 1 次（?是扩展正则，需要使用 egrep 命令）
* 匹配前一个字符重复 0 次，或任意多次
[] 匹配中括号中任意一个字符。例如，[abc]代表一定匹配一个字符，或者是 a，或者是 b，或者是 c
[-] 匹配中括号中任意一个字符，-代表一个范围。例如，[a-z]代表匹配一个小写字母
[^] 逻辑非，表示匹配不是中括号内的一个字符。例如，[^0-9]代表匹配一个不是数字的字符
^ 匹配行首
$ 匹配行尾

-------------------------------------------------------------------------------------------------

useradd  创建用户
groupadd 创建组
chgrp 组名 文件名 （修改文件所在组）
chown 用户名 文件名 修改文件所有者
usermod -g 组名 用户名 （改变用户所在组）
usermod -d 目录名 用户名 （改变用户登录的初始目录）
awk -F":" '{print $1"\t\t"$4}' /etc/passwd | grep '1000' 查看组下面所有用户

通过 chmod 指令，可以修改文件或者目录的权限 rwx 
u:所有者 g:所有组 o:其他人 a:所有人(u、g、o 的总和)
1) chmod u=rwx,g=rx,o=x 文件目录名
2) chmod o+w 文件目录名
3) chmod a-x 文件目录名
第二种方式：通过数字变更权限
规则：r=4 w=2 x=1 ,rwx=4+2+1=7
chmod u=rwx,g=rx,o=x 文件目录名
相当于 chmod 751 文件目录名


umask默认权限
[root@localhost ~]# umask 
0022 
[root@localhost ~]# umask -S 
u=rwx,g=rx,o=rx 

umask 权限的计算方法
我们需要先了解一下新建文件和目录的默认最大权限。
 对文件来讲，新建文件的默认最大权限是 666，没有执行（x）权限。这是因为执行权限对文件
来讲比较危险，不能在新建文件的时候默认赋予，而必须通过用户手工赋予。
 对目录来讲，新建目录的默认最大权限是 777。这是因为对目录而言，执行（x）权限仅仅代表
进入目录，所以即使建立新文件时直接默认赋予，也没有什么危险。
按照官方的标准算法，umask 默认权限需要使用二进制进行逻辑与和逻辑非联合运算才可以得到
正确的新建文件和目录的默认权限。这种方法既不好计算，也不好理解，超哥并不推荐。
我们在这里还是按照权限字母来讲解 umask 权限的计算方法。我们就按照默认的 umask 值是 022
来分别计算一下新建文件和目录的默认权限吧。
 文件的默认权限最大只能是 666，而 umask 的值是 022
“-rw-rw-rw-”减去 “-----w--w-”等于“-rw-r--r—”
 目录的默认权限最大可以是 777，而 umask 的值是 022
“drwxrwxrwx”减去“d----w--w-”等于“drwx-r-xr-x”
注意：umask 默认权限的计算绝不是数字直接相减。
例如 umask 是 033 呢？
 文件的默认权限最大只能是 666，而 umask 的值是 033
“-rw-rw-rw-”减去“-----wx-wx”等于“-rw-r--r—”

永久修改
[root@localhost ~]# vim /etc/profile
59 if [ $UID -gt 199 ] && [ "`/usr/bin/id -gn`" = "`/usr/bin/id -un`" ]; then
60     umask 002 普通用户002
61 else
62     umask 022 超级用户022
63 fi

-----------------------------------------------------------------------------------
1) mbr 分区:
1.最多支持四个主分区
2.系统只能安装在主分区
3.扩展分区要占一个主分区
4.MBR 最大只支持 2TB，但拥有最好的兼容性
2) gtp 分区:
1.支持无限多个主分区（但操作系统可能限制，比如 windows 下最多 128 个分区）
2.最大支持 18EB 的大容量（1EB=1024 PB，1PB=1024 TB ）
3.windows7 64 位以后支持 gtp

lsblk 指令查看当前系统的分区情况 老师不离开
mkfs -t ext4 /dev/sdb1
永久挂载 vim /etc/fstab
df -lh 查看磁盘情况
-----------------------------------------------------------------------------------
du -h /目录
查询指定目录的磁盘占用情况，默认为当前目录
-s 指定目录占用大小汇总
-h 带计量单位
-a 含文件
--max-depth=1 子目录深度  du -ach --max-depth=1 /home/
-c 列出明细的同时，增加汇总值

-----------------------------------------------------------------------------------
1) 统计/home 文件夹下文件的个数
ls -l /home/ |grep "^-" | wc -l

2) 统计/home 文件夹下目录的个数
ls -l /home/ |grep "^d" | wc -l

3) 统计/home 文件夹下文件的个数，包括子文件夹里的
ls -lR /home/ |grep "^-" | wc -l

4) 统计文件夹下目录的个数，包括子文件夹里的
ls -lR /home/ |grep "^d" | wc -l

5) 以树状显示目录结构
tree

-----------------------------------------------------------------------------------
ps 显示系统执行的进程 ps -aux
-ef 查看进程的父进程
-a 显示当前终端的所有进程信息
-u 以用户的格式显示进程信息
-x 显示后台进程运行的参数
指令说明
•System V 展示风格
•USER：用户名称
•PID：进程号
•%CPU：进程占用 CPU 的百分比
•%MEM：进程占用物理内存的百分比
•VSZ：进程占用的虚拟内存大小（单位：KB）
•RSS：进程占用的物理内存大小（单位：KB）（驻留中页的数量）
•TT：终端名称,缩写 . •STAT：进程状态，其中 S-睡眠，s-表示该进程是会话的先导进程，N-表示进程拥有比普通优先
级更低的优先级，R-正在运行，D-短期等待，Z-僵死进程，T-被跟踪或者被停止等等
•STARTED：进程的启动时间
•TIME：CPU 时间，即进程使用 CPU 的总时间
•COMMAND：启动进程所用的命令和参数，如果过长会被截断显示

STAT 进程状态（有以下几种）
D 无法中断的休眠状态（通常 IO 的进程）；
R 正在运行可中在队列中可过行的；
S 处于休眠状态；
T 停止或被追踪；
W 进入内存交换（从内核2.6开始无效）；
X 死掉的进程（从来没见过）；
Z 僵尸进程；
< 优先级高的进程
N 优先级较低的进程
L 有些页被锁进内存；
s 进程的领导者（在它之下有子进程）；
l 多进程的（使用 CLONE_THREAD, 类似 NPTL pthreads）；
+ 位于后台的进程组；
WCHAN 正在等待的进程资源；
START 启动进程的时间；
TIME 进程消耗CPU的时间；
COMMAND 命令的名称和参数；

查看进程树 pstree
可以更加直观的来看进程信息
-p :显示进程的 PID
-u :显示进程的所属用户

top 动态监控进程 
-d 秒数 指定top命令每隔几秒更新，默认是3秒
-i 使top不显示任何闲置或者僵尸的进程状态
-p 以CPU使用率排序
-M 以内存的使用率排序
-N 以PID排序
-q 退出top


-----------------------------------------------------------------------------------
终止进程 kill 和 killall
kill [选项] 进程号（功能描述：通过进程号杀死进程）
关闭非法用户 
ps -aux sshd  
kill 进程号
如果不想让其他人登录你的系统可以直接杀掉sshd

killall进程名称（功能描述：通过进程名称杀死进程，也支持通配符，这在系统因负载过大而变得很慢时很有用）    -9 :表示强迫进程立即停止

-----------------------------------------------------------------------------------------------
setup 图形配置文件（添加或关闭进程服务）

-------------------------------------------------------------------------------------------------
查看系统网络情况 netstat
-an 按一定顺序排序输出
-p 显示哪个进程在调用
查看所有网络服务 netstat -anp | more 
查看单个信息 netstat -anp | grep sshd 

-------------------------------------------------------------------------------------------------
                                            压缩和解压缩：

在 Linux 中可以识别的常见压缩格式有十几种，比如“.zip”“.gz”“.bz2”“.tar”“.tar.gz”“.tar.bz2”
等。
1．“.zip”格式
“.zip”是 Windows 中最常用的压缩格式，Linux 也可以正确识别“.zip”格式，这可以方便地和
Windows 系统通用压缩文件。
1.1．“.zip”格式的压缩命令
压缩命令就是 zip，其基本信息如下。
 命令名称：zip。
 英文原意：package and compress (archive) files。
 所在路径：/usr/bin/zip。
 执行权限：所有用户。
 功能描述：压缩文件或目录。
命令格式如下：
[root@localhost ~]# zip [选项] 压缩包名 源文件或源目录
选项：
-r： 压缩目录
例如：
[root@localhost ~]# zip ana.zip anaconda-ks.cfg
1.2．“.zip”格式的解压缩命令
“.zip”格式的解压缩命令是 unzip，其基本信息如下。
 命令名称：unzip。
 英文原意：list, test and extract compressed files in a ZIP archive。
 所在路径：/usr/bin/unzip。
 执行权限：所有用户。
 功能描述：列表、测试和提取压缩文件中的文件。
命令格式如下：
[root@localhost ~]# unzip [选项] 压缩包名
选项：
-d： 指定解压缩位置
例如：
[root@localhost ~]# unzip -d /tmp/ ana.zip
#把压缩包解压到指定位置
------------------------------------

2．“.gz”格式 不会打包
2.1．“.gz”格式的压缩命令
“.gz”格式是 Linux 中最常用的压缩格式，使用 gzip 命令进行压缩，其基本信息如下。
 命令名称：gzip。
 英文原意：compress or expand files。
 所在路径：/bin/gzip。
 执行权限：所有用户。
 功能描述：压缩文件或目录。
这个命令的格式如下：
[root@localhost ~]# gzip [选项] 源文件
选项：
-c： 将压缩数据输出到标准输出中，可以用于保留源文件
-d： 解压缩
-r： 压缩目录
[root@localhost ~]# gzip -c anaconda-ks.cfg > anaconda-ks.cfg.gz
#使用-c 选项，但是不让压缩数据输出到屏幕上，而是重定向到压缩文件中
#这样可以在压缩文件的同时不删除源文件
2．“.gz”格式的解压缩命令
如果要解压缩“.gz”格式，那么使用“gzip -d 压缩包”和“gunzip 压缩包”命令都可以。我们
先看看 gunzip 命令的基本信息。
 命令名称：gunzip。
 英文原意：compress or expand files。
 所在路径：/bin/gunzip。
 执行权限：所有用户。
 功能描述：解压缩文件或目录。
例如：
[root@localhost ~]# gunzip install.log.gz
[root@localhost ~]# gzip -d anaconda-ks.cfg.gz
两个命令都可以解压缩“.gz”格式

------------------------------------
3．“.bz2”格式 不能压缩目录
3.1．“.bz2”格式的压缩命令
“.bz2”格式是 Linux 的另一种压缩格式，从理论上来讲，“.bz2”格式的算法更先进、压缩比更
好；而“.gz”格式相对来讲压缩的时间更快。
“.bz2”格式的压缩命令是 bzip2，我们来看看这个命令的基本信息。
 命令名称：bzip2。
 英文原意：a block-sorting file compressor。
 所在路径：/usr/bin/bzip2。
 执行权限：所有用户。
 功能描述：.bz2 格式的压缩命令。
来看看 bzip2 命令的格式。
[root@localhost ~]# bzip2 [选项] 源文件
选项：
-d： 解压缩
-k： 压缩时，保留源文件
-v： 显示压缩的详细信息
例如：
[root@localhost ~]# bzip2 anaconda-ks.cfg
#压缩成.bz2 格式
[root@localhost ~]# bzip2 -k install.log.syslog
#保留源文件压缩
3.2．“.bz2”格式的解压缩命令
“.bz2”格式可以使用“bzip2 -d 压缩包”命令来进行解压缩，也可以使用“bunzip2 压缩包”命
令来进行解压缩。先看看 bunzip2 命令的基本信息。
 命令名称：bunzip2。
 英文原意：a block-sorting file compressor。
 所在路径：/usr/bin/bunzip2。
 执行权限：所有用户。
 功能描述：.bz2 格式的解压缩命令。
[root@localhost ~]# bunzip2 anaconda-ks.cfg.bz2
[root@localhost ~]# bzip2 -d install.log.syslog.bz2
#两个命令都可以解压缩

------------------------------------
4．“.tar”格式 打包不会压缩
4.1．“.tar”格式的打包命令
“.tar”格式的打包和解打包都使用 tar 命令，区别只是选项不同。我们先看看 tar 命令的基本信息。
 命令名称：tar。
 英文原意：tar。
 所在路径：/bin/tar。
 执行权限：所有用户。
 功能描述：打包与解打包命令。
命令的基本格式如下：
[root@localhost ~]# tar [选项] [-f 压缩包名] 源文件或目录
选项：
-c： 打包
-f： 指定压缩包的文件名。压缩包的扩展名是用来给管理员识别格式的，所以一定要正确指定扩展名
-v： 显示打包文件过程
[root@localhost ~]# tar -cvf anaconda-ks.cfg.tar anaconda-ks.cfg
#打包，不会压缩
4.2．“.tar”格式的解打包命令
“.tar”格式的解打包也需要使用 tar 命令，但是选项不太一样。命令格式如下：
[root@localhost ~]# tar [选项] 压缩包
选项：
-x： 解打包
-f： 指定压缩包的文件名
-v： 显示解打包文件过程
-t： 测试，就是不解打包，只是查看包中有哪些文件
-C(大) 目录：指定解打包位置
例如
[root@localhost ~]# tar -xvf anaconda-ks.cfg.tar
#解打包到当前目录下

------------------------------------
                              ↓↓↓↓↓

5．“.tar.gz”和“.tar.bz2”格式
使用 tar 命令直接打包压缩。命令格式如下：
[root@localhost ~]# tar [选项] 压缩包 源文件或目录
选项：
-z： 压缩和解压缩“.tar.gz”格式
-j： 压缩和解压缩“.tar.bz2”格式

例如：.tar.gz 格式
[root@localhost ~]# tar -zcvf tmp.tar.gz /tmp/
#把/tmp/目录直接打包压缩为“.tar.gz”格式
[root@localhost ~]# tar -zxvf tmp.tar.gz
#解压缩与解打包“.tar.gz”格式

例如：.tar.bz2 格式
[root@localhost ~]# tar -jcvf tmp.tar.bz2 /tmp/
#打包压缩为“.tar.bz2”格式，注意压缩包文件名
[root@localhost ~]# tar -jxvf tmp.tar.bz2
#解压缩与解打包“.tar.bz2”格式
再举几个例子：
[root@localhost ~]# mkdir test
[root@localhost ~]# touch test/abc
[root@localhost ~]# touch test/bcd
[root@localhost ~]# touch test/cde
#建立测试目录和测试文件
[root@localhost ~]# tar -zcvf test.tar.gz test/
#压缩
[root@localhost ~]# tar -ztvf test.tar.gz
#只查看，不解压
[root@localhost ~]# tar -zxvf test.tar.gz -C /tmp
#解压缩到指定位置
      ↓↓↓
[root@localhost ~]# tar -zxvf test.tar.gz -C /tmp test/cde
#只解压压缩包中的特定文件，到指定位置



rpm 包的其它查询指令：
rpm -qa :查询所安装的所有 rpm 软件包
rpm -qi 软件包名 ：查询软件包信息
rpm -ql 软件包名 :查询软件包中的文件
rpm -qf 文件全路径名 查询文件所属的软件包
卸载 rpm 包：
•基本语法
rpm -e RPM 包的名称 带上 --nodeps 就是强制删除
安装 rpm 包：
•基本语法
rpm -ivh RPM 包全路径名称
参数说明
i=install 安装
v=verbose 提示
h=hash 进度条
查询 yum 服务器是否有需要安装的软件

[yum].repo
yum list|grep xx 软件列表
•安装指定的 yum 包
yum install xxx 下载安装
[yum]
name=aa
baseurl=ftp://192.168.1.1/centos6.5
enabled=1
gpgcheck=0
-------------------------------------------------------------------------------------------------
crontab 定时任务
-e 编辑crontab编辑定时任务
-l 查询crontab任务
-r 删除当前用户所有crontab任务








-----------------------------------------------------------------------------------
1 - 在启动grub菜单，选择编辑选项启动
2 - 按键盘e键，来进入编辑界面
3 - 找到Linux 16的那一行，将ro改为rw init=/sysroot/bin/sh
4 - 现在按下 Control+x ，使用单用户模式启动
5 - 现在，可以使用下面的命令访问系统
chroot /sysroot
6 - 重置密码
passwd root
7 - 更新系统信息
touch /.autorelabel
8 - 退出chroot
exit
9 - 重启你的系统
reboot

三流之路